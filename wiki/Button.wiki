#summary Button is a Hardware Abstraction Library for Arduino, makes adding user interaction to your code easy.
#labels Featured,Arduino,Documentation,HardwareAbstractionLibrary

<wiki:toc max_depth="2" />

=Description=
`Button` is created to help Hardware Abstraction, and readability of code. It hides the pinMode, and digitalRead calls for the user.

`Button` library is part of the Hardware Abstraction Libraries.


=API=
==Constructors==
{{{
Button(uint8_t buttonPin, uint8_t buttonMode=PULLDOWN)
}}}
Creates a `Button` connected to `buttonPin` using mode `buttonMode`.

==Functions==
<table border="0">
 <tr><td>`void pullup()`</td><td>Enable PULLUP mode</td></tr>
 <tr><td>`void pulldown()`</td><td>Enable PULLDOWN mode</td></tr>
 <tr><td>`void isPressed()`</td><td>Check to see if this `Button` is pressed</td></tr>
 <tr><td>`void wasPressed()`</td><td>Check to see if this `Button` was pressed last check</td></tr>
 <tr><td>`void stateChanged()`</td><td>Check to see if the `Button` changed state between the two last readse</td></tr>
 <tr><td>`void uniquePress()`</td><td>Returns true one time per press</td></tr>
</table>

=Examples=

==`HelloButton`==

{{{
#include <Button.h>

Button button = Button(12,PULLUP); //create a Button object at pin 12

void setup(){
  pinMode(13,OUTPUT); //debug to led 13
}

void loop(){
  if(button.isPressed()){
	digitalWrite(13,HIGH);
  }else{
	digitalWrite(13,LOW);
  }
}
}}}